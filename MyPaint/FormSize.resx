<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>